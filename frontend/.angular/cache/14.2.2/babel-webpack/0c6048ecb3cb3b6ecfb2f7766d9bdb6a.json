{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let TransactionService = /*#__PURE__*/(() => {\n  class TransactionService {\n    constructor(http) {\n      this.http = http;\n      this.url = environment.apiURL;\n      this.jsonHeader = {\n        headers: new HttpHeaders().set('Content-Type', 'application/json')\n      };\n      this.jsonHeaderfile = {\n        headers: new HttpHeaders().set('Content-Type', 'text/csv')\n      };\n    }\n\n    add(data) {\n      return this.http.post(`${this.url}/transaction/add`, data, this.jsonHeader);\n    }\n\n    update(data) {\n      return this.http.patch(`${this.url}/transaction/update`, data, this.jsonHeader);\n    }\n\n    gettransactions() {\n      return this.http.get(`${this.url}/transaction/get`, this.jsonHeader);\n    }\n\n    gettransactionsByUser(id) {\n      return this.http.get(`${this.url}/transaction/get/user/${id}`, this.jsonHeader);\n    }\n\n    gettransactionsByDate(data) {\n      return this.http.post(`${this.url}/transaction/get/date`, data, this.jsonHeader);\n    } // updateStatus(data: any) {\n    //   return this.http.patch(\n    //     `${this.url}/transaction/updateStatus`,\n    //     data,\n    //     this.jsonHeader\n    //   );\n    // }\n\n\n    getsoldeByDate(data) {\n      return this.http.post(`${this.url}/transaction/get/solde/date`, data, this.jsonHeader);\n    }\n\n    delete(id) {\n      return this.http.delete(`${this.url}/transaction/delete/${id}`, this.jsonHeader);\n    }\n\n    uploadFile(formData) {\n      return this.http.post(`${this.url}/transaction/uploadcsv`, formData, this.jsonHeaderfile);\n    }\n\n    getById(id) {\n      return this.http.get(`${this.url}/transaction/getByID/${id}`);\n    }\n\n  }\n\n  TransactionService.ɵfac = function TransactionService_Factory(t) {\n    return new (t || TransactionService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  TransactionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TransactionService,\n    factory: TransactionService.ɵfac,\n    providedIn: 'root'\n  });\n  return TransactionService;\n})();","map":null,"metadata":{},"sourceType":"module"}