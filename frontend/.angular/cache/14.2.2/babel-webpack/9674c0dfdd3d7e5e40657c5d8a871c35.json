{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { UntypedFormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport jwt_decode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"src/app/services/transaction.service\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"src/app/services/snackbar.service\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/input\";\nimport * as i9 from \"@angular/material/toolbar\";\nimport * as i10 from \"@angular/flex-layout/flex\";\n\nfunction TransactionComponent_mat_error_12_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TransactionComponent_mat_error_12_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TransactionComponent_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, TransactionComponent_mat_error_12_span_1_Template, 2, 0, \"span\", 9);\n    i0.ɵɵtemplate(2, TransactionComponent_mat_error_12_span_2_Template, 2, 0, \"span\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.transactionForm.controls.libelle.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.transactionForm.controls.libelle.errors.pattern);\n  }\n}\n\nfunction TransactionComponent_div_13_mat_error_7_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TransactionComponent_div_13_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, TransactionComponent_div_13_mat_error_7_span_1_Template, 2, 0, \"span\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.transactionForm.controls.date_transaction.errors.required);\n  }\n}\n\nfunction TransactionComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"mat-form-field\", 7)(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 16);\n    i0.ɵɵelementStart(5, \"mat-hint\");\n    i0.ɵɵtext(6, \"MM/DD/YYYY\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, TransactionComponent_div_13_mat_error_7_Template, 2, 1, \"mat-error\", 9);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.transactionForm.controls.date_transaction.touched && ctx_r1.transactionForm.controls.date_transaction.invalid);\n  }\n}\n\nfunction TransactionComponent_mat_error_19_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TransactionComponent_mat_error_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, TransactionComponent_mat_error_19_span_1_Template, 2, 0, \"span\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.transactionForm.controls.recette.errors.required);\n  }\n}\n\nfunction TransactionComponent_mat_error_25_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TransactionComponent_mat_error_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, TransactionComponent_mat_error_25_span_1_Template, 2, 0, \"span\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.transactionForm.controls.depense.errors.required);\n  }\n}\n\nexport let TransactionComponent = /*#__PURE__*/(() => {\n  class TransactionComponent {\n    constructor(dialogData, fb, datepipe, transactionService, dialogRef, snackBar) {\n      this.dialogData = dialogData;\n      this.fb = fb;\n      this.datepipe = datepipe;\n      this.transactionService = transactionService;\n      this.dialogRef = dialogRef;\n      this.snackBar = snackBar;\n      this.onAddTransaction = new EventEmitter();\n      this.onEditTransaction = new EventEmitter();\n      this.transactionForm = UntypedFormGroup;\n      this.dialogAction = 'Add';\n      this.action = 'Add';\n      this.categories = [];\n    }\n\n    ngOnInit() {\n      this.transactionForm = this.fb.group({\n        libelle: [null, [Validators.required, Validators.pattern(GlobalConstants.nameRegex)]],\n        date_transaction: [null, [Validators.required]],\n        recette: [null],\n        depense: [null]\n      });\n      const token = localStorage.getItem('token');\n      this.tokenPayload = jwt_decode(token);\n\n      if (this.dialogData.action === 'Edit') {\n        this.dialogAction = 'Edit';\n        this.action = 'Update';\n        this.transactionForm.patchValue(this.dialogData.data);\n      }\n    }\n\n    handleSubmit() {\n      if (this.dialogAction === 'Edit') {\n        this.edit();\n      } else if (this.dialogAction === 'Add') {\n        this.add();\n      }\n    }\n\n    add() {\n      console.log(this.tokenPayload.id);\n      let formData = this.transactionForm.value;\n      let data = {\n        libelle: formData.libelle,\n        date_transaction: formData.date_transaction,\n        recette: formData.recette,\n        depense: formData.depense,\n        userid: this.tokenPayload.id\n      };\n      console.log(formData.date_transaction);\n      console.log(data.date_transaction);\n      this.transactionService.add(data).subscribe(resp => {\n        this.dialogRef.close();\n        this.onAddTransaction.emit();\n        this.responseMessage = resp.message;\n        this.snackBar.openSnackBar(this.responseMessage, 'success');\n      }, error => {\n        var _a, _b;\n\n        this.dialogRef.close();\n\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n\n    edit() {\n      let formData = this.transactionForm.value;\n      let data = {\n        id: this.dialogData.data.id,\n        date_transaction: this.dialogData.date_transaction,\n        libelle: formData.libelle,\n        recette: formData.recette,\n        depense: formData.depense\n      };\n      this.transactionService.update(data).subscribe(resp => {\n        this.dialogRef.close();\n        this.onEditTransaction.emit();\n        this.responseMessage = resp.message;\n        this.snackBar.openSnackBar(this.responseMessage, 'success');\n      }, error => {\n        var _a, _b;\n\n        this.dialogRef.close();\n\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n\n    delete() {}\n\n  }\n\n  TransactionComponent.ɵfac = function TransactionComponent_Factory(t) {\n    return new (t || TransactionComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.DatePipe), i0.ɵɵdirectiveInject(i3.TransactionService), i0.ɵɵdirectiveInject(i4.MatDialogRef), i0.ɵɵdirectiveInject(i5.SnackbarService));\n  };\n\n  TransactionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TransactionComponent,\n    selectors: [[\"app-transaction\"]],\n    decls: 31,\n    vars: 8,\n    consts: [[\"color\", \"primary\"], [\"fxLayout\", \"row\"], [1, \"title-center\"], [1, \"mat-typography\"], [3, \"formGroup\"], [\"fxFlex\", \"\", \"fxLayout\", \"column\"], [\"fxLayout\", \"row wrap\"], [\"appearance\", \"fill\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"libelle\", \"required\", \"\"], [4, \"ngIf\"], [\"fxLayout\", \"row wrap\", 4, \"ngIf\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"recette\", \"required\", \"\"], [\"type\", \"text\", \"matInput\", \"\", \"formControlName\", \"depense\", \"required\", \"\"], [\"align\", \"center\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\", \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"mat-dialog-close\", \"\"], [\"matInput\", \"\", \"type\", \"date\", \"matInput\", \"\", \"formControlName\", \"date_transaction\", \"required\", \"\"]],\n    template: function TransactionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"mat-toolbar-row\", 1)(2, \"span\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(4, \"mat-dialog-content\", 3)(5, \"form\", 4)(6, \"div\", 5)(7, \"div\", 6)(8, \"mat-form-field\", 7)(9, \"mat-label\");\n        i0.ɵɵtext(10, \"Libelle\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 8);\n        i0.ɵɵtemplate(12, TransactionComponent_mat_error_12_Template, 3, 2, \"mat-error\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(13, TransactionComponent_div_13_Template, 8, 1, \"div\", 10);\n        i0.ɵɵelementStart(14, \"div\", 6)(15, \"mat-form-field\", 7)(16, \"mat-label\");\n        i0.ɵɵtext(17, \"Recettes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 11);\n        i0.ɵɵtemplate(19, TransactionComponent_mat_error_19_Template, 2, 1, \"mat-error\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 6)(21, \"mat-form-field\", 7)(22, \"mat-label\");\n        i0.ɵɵtext(23, \"Depenses\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 12);\n        i0.ɵɵtemplate(25, TransactionComponent_mat_error_25_Template, 2, 1, \"mat-error\", 9);\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(26, \"mat-dialog-actions\", 13)(27, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function TransactionComponent_Template_button_click_27_listener() {\n          return ctx.handleSubmit();\n        });\n        i0.ɵɵtext(28);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"button\", 15);\n        i0.ɵɵtext(30, \"Close\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"\", ctx.dialogData.action, \" Transaction\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.transactionForm);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.transactionForm.controls.libelle.touched && ctx.transactionForm.controls.libelle.invalid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !(ctx.dialogData.action == \"Edit\"));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.transactionForm.controls.recette.touched && ctx.transactionForm.controls.recette.invalid);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.transactionForm.controls.depense.touched && ctx.transactionForm.controls.depense.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !(ctx.transactionForm.valid && ctx.transactionForm.dirty));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.action, \" \");\n      }\n    },\n    dependencies: [i2.NgIf, i6.MatButton, i4.MatDialogClose, i4.MatDialogContent, i4.MatDialogActions, i7.MatError, i7.MatFormField, i7.MatHint, i7.MatLabel, i8.MatInput, i9.MatToolbar, i9.MatToolbarRow, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i10.DefaultLayoutDirective, i10.DefaultFlexDirective]\n  });\n  return TransactionComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}