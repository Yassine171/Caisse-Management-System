{"ast":null,"code":"import { UntypedFormGroup, Validators } from '@angular/forms';\nimport { GlobalConstants } from '../shared/global-constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/user.service\";\nimport * as i3 from \"../services/snackbar.service\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"ngx-ui-loader\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/toolbar\";\nimport * as i11 from \"@angular/flex-layout/flex\";\n\nfunction ForgotPasswordComponent_mat_error_11_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ForgotPasswordComponent_mat_error_11_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ForgotPasswordComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, ForgotPasswordComponent_mat_error_11_span_1_Template, 2, 0, \"span\", 8);\n    i0.ɵɵtemplate(2, ForgotPasswordComponent_mat_error_11_span_2_Template, 2, 0, \"span\", 8);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.forgotPasswordForm.controls.email.errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.forgotPasswordForm.controls.email.erros.pattern);\n  }\n}\n\nexport let ForgotPasswordComponent = /*#__PURE__*/(() => {\n  class ForgotPasswordComponent {\n    constructor(fb, // private router: Router,\n    userService, snackBar, dialogRef, ngxService) {\n      this.fb = fb;\n      this.userService = userService;\n      this.snackBar = snackBar;\n      this.dialogRef = dialogRef;\n      this.ngxService = ngxService;\n      this.forgotPasswordForm = UntypedFormGroup;\n    }\n\n    ngOnInit() {\n      this.forgotPasswordForm = this.fb.group({\n        email: [null, [Validators.required, Validators.pattern(GlobalConstants.emailRegex)]]\n      });\n    }\n\n    handleSubmit() {\n      this.ngxService.start();\n      let formData = this.forgotPasswordForm.value;\n      let data = {\n        email: formData.email\n      };\n      this.userService.forgotPassword(data).subscribe(resp => {\n        this.ngxService.stop();\n        this.responseMessage = resp === null || resp === void 0 ? void 0 : resp.message;\n        this.dialogRef.close();\n        this.snackBar.openSnackBar(this.responseMessage, '');\n      }, error => {\n        var _a, _b;\n\n        this.ngxService.stop();\n\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n\n  }\n\n  ForgotPasswordComponent.ɵfac = function ForgotPasswordComponent_Factory(t) {\n    return new (t || ForgotPasswordComponent)(i0.ɵɵdirectiveInject(i1.UntypedFormBuilder), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.SnackbarService), i0.ɵɵdirectiveInject(i4.MatDialogRef), i0.ɵɵdirectiveInject(i5.NgxUiLoaderService));\n  };\n\n  ForgotPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForgotPasswordComponent,\n    selectors: [[\"app-forgot-password\"]],\n    decls: 17,\n    vars: 3,\n    consts: [[\"color\", \"primary\"], [\"fxLayout\", \"row\"], [1, \"title-center\"], [1, \"mat-typography\"], [3, \"formGroup\"], [\"fxFlex\", \"\", \"fxLayout\", \"column\"], [\"appearance\", \"fill\", \"fxFlex\", \"\"], [\"type\", \"email\", \"matInput\", \"\", \"formControlName\", \"email\", \"required\", \"\"], [4, \"ngIf\"], [\"align\", \"center\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\", \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"mat-dialog-close\", \"\"]],\n    template: function ForgotPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-toolbar\", 0)(1, \"mat-toolbar-row\", 1)(2, \"span\", 2);\n        i0.ɵɵtext(3, \"Forgot Password?\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(4, \"mat-dialog-content\", 3)(5, \"form\", 4)(6, \"div\", 5)(7, \"mat-form-field\", 6)(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵtemplate(11, ForgotPasswordComponent_mat_error_11_Template, 3, 2, \"mat-error\", 8);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(12, \"mat-dialog-actions\", 9)(13, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function ForgotPasswordComponent_Template_button_click_13_listener() {\n          return ctx.handleSubmit();\n        });\n        i0.ɵɵtext(14, \" Send Password \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 11);\n        i0.ɵɵtext(16, \"Close\");\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.forgotPasswordForm);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.forgotPasswordForm.controls.email.touched && ctx.forgotPasswordForm.controls.email.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !(ctx.forgotPasswordForm.valid && ctx.forgotPasswordForm.dirty));\n      }\n    },\n    dependencies: [i6.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, i7.MatButton, i4.MatDialogClose, i4.MatDialogContent, i4.MatDialogActions, i8.MatError, i8.MatFormField, i8.MatLabel, i9.MatInput, i10.MatToolbar, i10.MatToolbarRow, i11.DefaultLayoutDirective, i11.DefaultFlexDirective]\n  });\n  return ForgotPasswordComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}