{"ast":null,"code":"import { MatDialogConfig } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { GlobalConstants } from 'src/app/shared/global-constants';\nimport { ConfirmationComponent } from '../dialog/confirmation/confirmation.component';\nimport { TransactionComponent } from '../dialog/transaction/transaction.component';\nimport { UntypedFormGroup, Validators } from '@angular/forms';\nimport { saveAs } from 'file-saver';\nimport jwt_decode from 'jwt-decode';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"src/app/services/transaction.service\";\nimport * as i3 from \"./../../services/bill.service\";\nimport * as i4 from \"ngx-ui-loader\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/dialog\";\nimport * as i7 from \"src/app/services/snackbar.service\";\nimport * as i8 from \"@angular/router\";\nimport * as i9 from \"ngx-csv-parser\";\nimport * as i10 from \"@angular/material/button\";\nimport * as i11 from \"@angular/material/card\";\nimport * as i12 from \"@angular/material/table\";\nimport * as i13 from \"@angular/material/form-field\";\nimport * as i14 from \"@angular/material/icon\";\nimport * as i15 from \"@angular/material/input\";\nimport * as i16 from \"@angular/material/tooltip\";\nimport * as i17 from \"@angular/flex-layout/flex\";\nconst _c0 = [\"fileImportInput\"];\n\nfunction ManageTransactionComponent_mat_error_16_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"This field is mandatory\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ManageTransactionComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, ManageTransactionComponent_mat_error_16_span_1_Template, 2, 0, \"span\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.dateForm.controls.date.errors.required);\n  }\n}\n\nfunction ManageTransactionComponent_mat_card_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 26)(1, \"b\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" Brouillard de caisse solde - Au \", ctx_r2.dateForm.value.date, \" : \", ctx_r2.soldeTotal[0].totalSolde, \" DH \");\n  }\n}\n\nfunction ManageTransactionComponent_th_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 27);\n    i0.ɵɵtext(1, \"Date\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ManageTransactionComponent_td_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r18 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(2, 1, element_r18.date_transaction, \"dd/MM/y\"));\n  }\n}\n\nfunction ManageTransactionComponent_th_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 27);\n    i0.ɵɵtext(1, \"Libelle\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ManageTransactionComponent_td_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"titlecase\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r19 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, element_r19.libelle));\n  }\n}\n\nfunction ManageTransactionComponent_th_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 27);\n    i0.ɵɵtext(1, \"Recettes\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ManageTransactionComponent_td_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r20 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r20.recette);\n  }\n}\n\nfunction ManageTransactionComponent_th_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 27);\n    i0.ɵɵtext(1, \"Depenses\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ManageTransactionComponent_td_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r21 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r21.depense);\n  }\n}\n\nfunction ManageTransactionComponent_th_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 27);\n    i0.ɵɵtext(1, \"Solde\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ManageTransactionComponent_td_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r22 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r22.solde);\n  }\n}\n\nfunction ManageTransactionComponent_th_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 27);\n    i0.ɵɵtext(1, \"Action\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ManageTransactionComponent_td_56_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 29)(1, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function ManageTransactionComponent_td_56_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const element_r23 = restoredCtx.$implicit;\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.handleEditAction(element_r23));\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function ManageTransactionComponent_td_56_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const element_r23 = restoredCtx.$implicit;\n      const ctx_r26 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r26.handleDeleteAction(element_r23));\n    });\n    i0.ɵɵelementStart(5, \"mat-icon\");\n    i0.ɵɵtext(6, \"delete\");\n    i0.ɵɵelementEnd()()();\n  }\n}\n\nfunction ManageTransactionComponent_tr_57_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 32);\n  }\n}\n\nfunction ManageTransactionComponent_tr_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 33);\n  }\n}\n\nexport let ManageTransactionComponent = /*#__PURE__*/(() => {\n  class ManageTransactionComponent {\n    constructor(datepipe, transactionService, billService, ngxService, fb, dialog, snackBar, router, ngxCsvParser) {\n      this.datepipe = datepipe;\n      this.transactionService = transactionService;\n      this.billService = billService;\n      this.ngxService = ngxService;\n      this.fb = fb;\n      this.dialog = dialog;\n      this.snackBar = snackBar;\n      this.router = router;\n      this.ngxCsvParser = ngxCsvParser;\n      this.displayedColumns = ['Date', 'Libelle', 'Recettes', 'Depenses', 'Solde', 'Edit'];\n      this.dateForm = UntypedFormGroup;\n    }\n\n    ngOnInit() {\n      this.ngxService.start();\n      const token = localStorage.getItem('token');\n      this.tokenPayload = jwt_decode(token);\n      this.tableData();\n      this.tableData();\n      this.tableData();\n      this.dateForm = this.fb.group({\n        date: [null, [Validators.required]]\n      });\n    }\n\n    tableData() {\n      this.transactionService.gettransactions().subscribe(resp => {\n        this.ngxService.stop();\n        this.dataSource = new MatTableDataSource(resp.data);\n      }, error => {\n        var _a, _b;\n\n        this.ngxService.stop();\n\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n\n    applyFilter() {\n      // event.preventDefault();\n      let data = {\n        date: this.dateForm.value.date\n      };\n      this.transactionService.gettransactionsByDate(data).subscribe(resp => {\n        this.ngxService.stop();\n        this.dataSource = resp;\n      }, error => {\n        var _a, _b;\n\n        this.ngxService.stop();\n\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n      this.transactionService.getsoldeByDate(data).subscribe(resp => {\n        this.ngxService.stop();\n        this.soldeTotal = resp;\n      }, error => {\n        var _a, _b;\n\n        this.ngxService.stop();\n\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n\n    disable() {\n      if (this.dataSource.length > 0 && this.dateForm.value.date) {\n        return false;\n      }\n\n      return true;\n    }\n\n    handleInsertAction() {\n      if (this.dataSource.length > 0 && this.dateForm.value.date) {\n        this.ngxService.start();\n        let data = {\n          solde: this.soldeTotal[0].totalSolde,\n          date: this.dateForm.value.date,\n          transactionsDetails: JSON.stringify(this.dataSource)\n        };\n        this.billService.generateReport(data).subscribe(resp => {\n          this.downloadFile(resp === null || resp === void 0 ? void 0 : resp.date);\n          this.dateForm.reset();\n          this.tableData();\n        }, error => {\n          var _a, _b;\n\n          this.ngxService.stop();\n\n          if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n            this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n          } else {\n            this.responseMessage = GlobalConstants.genericError;\n          }\n\n          this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n        });\n      }\n    }\n\n    downloadFile(fileName) {\n      let data = {\n        date: fileName\n      };\n      this.billService.getPDF(data).subscribe(resp => {\n        saveAs(resp, fileName + '.pdf');\n        this.ngxService.stop();\n      });\n    }\n\n    handleAddAction() {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.data = {\n        action: 'Add'\n      };\n      dialogConfig.width = '850px';\n      const dialogRef = this.dialog.open(TransactionComponent, dialogConfig);\n      this.router.events.subscribe(() => {\n        dialogRef.close();\n      });\n      const sub = dialogRef.componentInstance.onAddTransaction.subscribe(resp => {\n        this.tableData();\n      });\n    }\n\n    handleEditAction(value) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.data = {\n        action: 'Edit',\n        data: value\n      };\n      dialogConfig.width = '850px';\n      const dialogRef = this.dialog.open(TransactionComponent, dialogConfig);\n      this.router.events.subscribe(() => {\n        dialogRef.close();\n      });\n      const sub = dialogRef.componentInstance.onEditTransaction.subscribe(resp => {\n        this.tableData();\n        this.tableData();\n        this.tableData();\n      });\n    }\n\n    handleDeleteAction(value) {\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.data = {\n        message: 'delete ' + value.libelle + ' transaction'\n      };\n      const dialogRef = this.dialog.open(ConfirmationComponent, dialogConfig);\n      const sub = dialogRef.componentInstance.onEmitStatusChange.subscribe(resp => {\n        this.ngxService.start();\n        this.deleteTransaction(value.id);\n        dialogRef.close();\n      });\n    }\n\n    deleteTransaction(id) {\n      this.transactionService.delete(id).subscribe(resp => {\n        this.ngxService.stop();\n        this.tableData();\n        this.responseMessage = resp === null || resp === void 0 ? void 0 : resp.message;\n        this.snackBar.openSnackBar(this.responseMessage, 'success');\n      }, error => {\n        var _a, _b;\n\n        this.ngxService.stop();\n\n        if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n          this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n        }\n\n        this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n      });\n    }\n\n    fileChangeListener($event) {\n      const files = $event.srcElement.files;\n      this.ngxCsvParser.parse(files[0], {\n        header: true,\n        delimiter: ',',\n        encoding: 'utf8'\n      }).pipe().subscribe({\n        next: result => {\n          console.log('Result', result);\n          this.csvRecords = result;\n          console.log(\"csv\", this.csvRecords[0]);\n          this.csvRecords.forEach(function (i) {\n            let data = {\n              libelle: this.csvRecords[0].libelle,\n              date_transaction: this.csvRecords[0].date_transaction,\n              recette: this.csvRecords[0].recette,\n              depense: this.csvRecords[0].depense,\n              userid: this.tokenPayload.id\n            };\n          });\n          this.transactionService.add(data).subscribe(resp => {\n            this.responseMessage = resp.message;\n            this.snackBar.openSnackBar(this.responseMessage, 'success');\n            this.tableData();\n          }, error => {\n            var _a, _b;\n\n            if ((_a = error.error) === null || _a === void 0 ? void 0 : _a.message) {\n              this.responseMessage = (_b = error.error) === null || _b === void 0 ? void 0 : _b.message;\n            } else {\n              this.responseMessage = GlobalConstants.genericError;\n            }\n\n            this.snackBar.openSnackBar(this.responseMessage, GlobalConstants.error);\n          });\n        },\n        error: error => {\n          console.log('Error', error);\n        }\n      });\n    }\n\n  }\n\n  ManageTransactionComponent.ɵfac = function ManageTransactionComponent_Factory(t) {\n    return new (t || ManageTransactionComponent)(i0.ɵɵdirectiveInject(i1.DatePipe), i0.ɵɵdirectiveInject(i2.TransactionService), i0.ɵɵdirectiveInject(i3.BillService), i0.ɵɵdirectiveInject(i4.NgxUiLoaderService), i0.ɵɵdirectiveInject(i5.UntypedFormBuilder), i0.ɵɵdirectiveInject(i6.MatDialog), i0.ɵɵdirectiveInject(i7.SnackbarService), i0.ɵɵdirectiveInject(i8.Router), i0.ɵɵdirectiveInject(i9.NgxCsvParser));\n  };\n\n  ManageTransactionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ManageTransactionComponent,\n    selectors: [[\"app-manage-transaction\"]],\n    viewQuery: function ManageTransactionComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileImportInput = _t.first);\n      }\n    },\n    decls: 59,\n    vars: 9,\n    consts: [[\"mat-flat-button\", \"\", \"color\", \"primary\", 1, \"float-right\", 3, \"click\"], [3, \"formGroup\"], [\"fxLayout\", \"row\"], [\"appearance\", \"fill\"], [\"matInput\", \"\", \"type\", \"Date\", \"formControlName\", \"date\", \"required\", \"\"], [4, \"ngIf\"], [\"align\", \"end\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\", \"click\"], [\"type\", \"file\", \"name\", \"File Upload\", \"id\", \"csvFileUpload\", \"accept\", \".csv\", 3, \"change\"], [\"fileImportInput\", \"\"], [1, \"mt-4\"], [\"mat-flat-button\", \"\", \"color\", \"primary\", 1, \"float-right\", 3, \"disabled\", \"click\"], [\"class\", \"mt-4 float-center\", 4, \"ngIf\"], [1, \"responsive_table\"], [\"id\", \"dataTables-example\", \"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"Date\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"Libelle\"], [\"matColumnDef\", \"Recettes\"], [\"matColumnDef\", \"Depenses\"], [\"matColumnDef\", \"Solde\"], [\"matColumnDef\", \"Edit\"], [\"mat-cell\", \"\", \"class\", \"action-link\", 4, \"matCellDef\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\", \"matHeaderRowDefSticky\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [1, \"mt-4\", \"float-center\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-cell\", \"\", 1, \"action-link\"], [\"mat-icon-button\", \"\", \"color\", \"primary\", \"matTooltip\", \"Edit\", 3, \"click\"], [\"mat-icon-button\", \"\", \"color\", \"primary\", \"matTooltip\", \"Delete\", 3, \"click\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n    template: function ManageTransactionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\")(1, \"b\")(2, \"span\");\n        i0.ɵɵtext(3, \"Manage Transactions\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function ManageTransactionComponent_Template_button_click_4_listener() {\n          return ctx.handleAddAction();\n        });\n        i0.ɵɵtext(5, \" Add Transaction \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(6, \"hr\");\n        i0.ɵɵelementStart(7, \"mat-card\")(8, \"form\", 1)(9, \"div\", 2)(10, \"mat-form-field\", 3)(11, \"mat-label\");\n        i0.ɵɵtext(12, \"Choose a date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 4);\n        i0.ɵɵelementStart(14, \"mat-hint\");\n        i0.ɵɵtext(15, \"MM/DD/YYYY\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, ManageTransactionComponent_mat_error_16_Template, 2, 1, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-dialog-actions\", 6)(18, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function ManageTransactionComponent_Template_button_click_18_listener() {\n          return ctx.applyFilter();\n        });\n        i0.ɵɵtext(19, \" Search \");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelement(20, \"hr\");\n        i0.ɵɵelementStart(21, \"mat-card\")(22, \"b\")(23, \"span\");\n        i0.ɵɵtext(24, \"Ypload Transactions (Format csv)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"input\", 8, 9);\n        i0.ɵɵlistener(\"change\", function ManageTransactionComponent_Template_input_change_25_listener($event) {\n          return ctx.fileChangeListener($event);\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(27, \"hr\");\n        i0.ɵɵelementStart(28, \"mat-card\", 10)(29, \"b\")(30, \"span\");\n        i0.ɵɵtext(31, \"Insert Transactions of day\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function ManageTransactionComponent_Template_button_click_32_listener() {\n          return ctx.handleInsertAction();\n        });\n        i0.ɵɵtext(33, \" Insert Transaction \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(34, \"hr\");\n        i0.ɵɵtemplate(35, ManageTransactionComponent_mat_card_35_Template, 3, 2, \"mat-card\", 12);\n        i0.ɵɵelement(36, \"hr\");\n        i0.ɵɵelementStart(37, \"div\", 13)(38, \"table\", 14);\n        i0.ɵɵelementContainerStart(39, 15);\n        i0.ɵɵtemplate(40, ManageTransactionComponent_th_40_Template, 2, 0, \"th\", 16);\n        i0.ɵɵtemplate(41, ManageTransactionComponent_td_41_Template, 3, 4, \"td\", 17);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(42, 18);\n        i0.ɵɵtemplate(43, ManageTransactionComponent_th_43_Template, 2, 0, \"th\", 16);\n        i0.ɵɵtemplate(44, ManageTransactionComponent_td_44_Template, 3, 3, \"td\", 17);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(45, 19);\n        i0.ɵɵtemplate(46, ManageTransactionComponent_th_46_Template, 2, 0, \"th\", 16);\n        i0.ɵɵtemplate(47, ManageTransactionComponent_td_47_Template, 2, 1, \"td\", 17);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(48, 20);\n        i0.ɵɵtemplate(49, ManageTransactionComponent_th_49_Template, 2, 0, \"th\", 16);\n        i0.ɵɵtemplate(50, ManageTransactionComponent_td_50_Template, 2, 1, \"td\", 17);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(51, 21);\n        i0.ɵɵtemplate(52, ManageTransactionComponent_th_52_Template, 2, 0, \"th\", 16);\n        i0.ɵɵtemplate(53, ManageTransactionComponent_td_53_Template, 2, 1, \"td\", 17);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(54, 22);\n        i0.ɵɵtemplate(55, ManageTransactionComponent_th_55_Template, 2, 0, \"th\", 16);\n        i0.ɵɵtemplate(56, ManageTransactionComponent_td_56_Template, 7, 0, \"td\", 23);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(57, ManageTransactionComponent_tr_57_Template, 1, 0, \"tr\", 24);\n        i0.ɵɵtemplate(58, ManageTransactionComponent_tr_58_Template, 1, 0, \"tr\", 25);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.dateForm);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.dateForm.controls.date.touched && ctx.dateForm.controls.date.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !(ctx.dateForm.valid && ctx.dateForm.dirty));\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"disabled\", ctx.disable());\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.disable());\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n        i0.ɵɵadvance(19);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns)(\"matHeaderRowDefSticky\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n      }\n    },\n    dependencies: [i1.NgIf, i10.MatButton, i11.MatCard, i12.MatTable, i12.MatHeaderCellDef, i12.MatHeaderRowDef, i12.MatColumnDef, i12.MatCellDef, i12.MatRowDef, i12.MatHeaderCell, i12.MatCell, i12.MatHeaderRow, i12.MatRow, i6.MatDialogActions, i13.MatError, i13.MatFormField, i13.MatHint, i13.MatLabel, i14.MatIcon, i15.MatInput, i16.MatTooltip, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.FormGroupDirective, i5.FormControlName, i17.DefaultLayoutDirective, i1.TitleCasePipe, i1.DatePipe],\n    styles: [\".float-right[_ngcontent-%COMP%]{float:right}mat-card[_ngcontent-%COMP%]{padding:20px}table[_ngcontent-%COMP%]{margin-top:5px;width:100%}\"]\n  });\n  return ManageTransactionComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}